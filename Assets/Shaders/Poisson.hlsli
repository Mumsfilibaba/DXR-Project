#ifndef POISSON_HLSLI
#define POISSON_HLSLI

static const float2 PoissonDisk16[16] =
{
    float2(-0.942016240f, -0.39906216),
    float2( 0.945586090f, -0.76890725),
    float2(-0.094184101f, -0.92938870),
    float2( 0.344959380f,  0.29387760),
    float2(-0.915885810f,  0.45771432),
    float2(-0.815442320f, -0.87912464),
    float2(-0.382775430f,  0.27676845),
    float2( 0.974843980f,  0.75648379),
    float2( 0.443233250f, -0.97511554),
    float2( 0.537429810f, -0.47373420),
    float2(-0.264969110f, -0.41893023),
    float2( 0.791975140f,  0.19090188),
    float2(-0.241888400f,  0.99706507),
    float2(-0.814099550f,  0.91437590),
    float2( 0.199841260f,  0.78641367),
    float2( 0.143831610f, -0.14100790)
};

static const float2 PoissonDisk32[32] =
{
    float2( 0.064070130f,  0.0540992700f),
    float2( 0.736657700f,  0.5789394000f),
    float2(-0.627054200f, -0.5320278000f),
    float2(-0.409610700f,  0.8411095000f),
    float2( 0.684956400f, -0.4990818000f),
    float2(-0.874181000f, -0.0457973500f),
    float2( 0.998999800f,  0.0009880066f),
    float2(-0.004920578f, -0.9151649000f),
    float2( 0.180576300f,  0.9747483000f),
    float2(-0.213845100f,  0.2635818000f),
    float2( 0.109845000f,  0.3884785000f),
    float2( 0.068767550f, -0.3581074000f),
    float2( 0.374073000f, -0.7661266000f),
    float2( 0.307913200f, -0.1216763000f),
    float2(-0.379433500f, -0.8271583000f),
    float2(-0.203878000f, -0.0771503400f),
    float2( 0.591269700f,  0.1469799000f),
    float2(-0.880690000f,  0.3031784000f),
    float2( 0.504010800f,  0.8283722000f),
    float2(-0.584412400f,  0.5494877000f),
    float2( 0.601779900f, -0.1726654000f),
    float2(-0.555498100f,  0.1559997000f),
    float2(-0.301636900f, -0.3900928000f),
    float2(-0.555063200f, -0.1723762000f),
    float2( 0.925029000f,  0.2995041000f),
    float2(-0.247313700f,  0.5538505000f),
    float2( 0.918303700f, -0.2862392000f),
    float2( 0.246942100f,  0.6718712000f),
    float2( 0.391639700f, -0.4328209000f),
    float2(-0.035769270f, -0.6220032000f),
    float2(-0.046612550f,  0.7995201000f),
    float2( 0.440292400f,  0.3640312000f),
};

static const float2 PoissonDisk64[64] =
{
    float2(-0.884081,  0.124488),
    float2(-0.714377,  0.027940),
    float2(-0.747945,  0.227922),
    float2(-0.939609,  0.243634),
    float2(-0.985465,  0.045534),
    float2(-0.861367, -0.136222),
    float2(-0.881934,  0.396908),
    float2(-0.466938,  0.014526),
    float2(-0.558207,  0.212662),
    float2(-0.578447, -0.095822),
    float2(-0.740266, -0.095631),
    float2(-0.751681,  0.472604),
    float2(-0.553147, -0.243177),
    float2(-0.674762, -0.330730),
    float2(-0.402765, -0.122087),
    float2(-0.319776, -0.312166),
    float2(-0.413923, -0.439757),
    float2(-0.979153, -0.201245),
    float2(-0.865579, -0.288695),
    float2(-0.243704, -0.186378),
    float2(-0.294920, -0.055748),
    float2(-0.604452, -0.544251),
    float2(-0.418056, -0.587679),
    float2(-0.549156, -0.415877),
    float2(-0.238080, -0.611761),
    float2(-0.267004, -0.459702),
    float2(-0.100006, -0.229116),
    float2(-0.101928, -0.380382),
    float2(-0.681467, -0.700773),
    float2(-0.763488, -0.543386),
    float2(-0.549030, -0.750749),
    float2(-0.809045, -0.408738),
    float2(-0.388134, -0.773448),
    float2(-0.429392, -0.894892),
    float2(-0.131597,  0.065058),
    float2(-0.275002,  0.102922),
    float2(-0.106117, -0.068327),
    float2(-0.294586, -0.891515),
    float2(-0.629418,  0.379387),
    float2(-0.407257,  0.339748),
    float2( 0.071650, -0.384284),
    float2( 0.022018, -0.263793),
    float2( 0.003879, -0.136073),
    float2(-0.137533, -0.767844),
    float2(-0.050874, -0.906068),
    float2( 0.114133, -0.070053),
    float2( 0.163314, -0.217231),
    float2(-0.100262, -0.587992),
    float2(-0.004942,  0.125368),
    float2( 0.035302, -0.619310),
    float2( 0.195646, -0.459022),
    float2( 0.303969, -0.346362),
    float2(-0.678118,  0.685099),
    float2(-0.628418,  0.507978),
    float2(-0.508473,  0.458753),
    float2( 0.032134, -0.782030),
    float2( 0.122595,  0.280353),
    float2(-0.043643,  0.312119),
    float2( 0.132993,  0.085170),
    float2(-0.192106,  0.285848),
    float2( 0.183621, -0.713242),
    float2( 0.265220, -0.596716),
    float2(-0.009628, -0.483058),
    float2(-0.018516,  0.435703)
};

static const float2 PoissonDisk128[128] =
{
    float2(-0.940611900f,  0.2160107000f),
    float2(-0.920003000f,  0.0313576200f),
    float2(-0.917876000f, -0.2841548000f),
    float2(-0.916607900f, -0.1372365000f),
    float2(-0.897890700f, -0.4213504000f),
    float2(-0.846799900f,  0.5201505000f),
    float2(-0.826101300f,  0.3743192000f),
    float2(-0.783516200f,  0.0143200800f),
    float2(-0.779963000f,  0.2161933000f),
    float2(-0.771958800f,  0.6335353000f),
    float2(-0.765878200f, -0.3316436000f),
    float2(-0.734191200f, -0.5430729000f),
    float2(-0.682572700f, -0.1883408000f),
    float2(-0.677746700f,  0.3313724000f),
    float2(-0.662191000f,  0.5155144000f),
    float2(-0.656998900f, -0.7000636000f),
    float2(-0.602144700f,  0.7923283000f),
    float2(-0.598081500f, -0.5529259000f),
    float2(-0.586708900f,  0.0985715200f),
    float2(-0.577459700f, -0.8154474000f),
    float2(-0.576704100f, -0.2656419000f),
    float2(-0.575091000f, -0.4220052000f),
    float2(-0.548697900f, -0.0963500200f),
    float2(-0.523558700f,  0.6594529000f),
    float2(-0.517033800f, -0.6636339000f),
    float2(-0.511405500f,  0.4373561000f),
    float2(-0.484472500f,  0.2985838000f),
    float2(-0.480324500f,  0.8482798000f),
    float2(-0.465195700f, -0.5392771000f),
    float2(-0.452968500f,  0.0994239400f),
    float2(-0.452347100f, -0.3125569000f),
    float2(-0.426842200f,  0.5644538000f),
    float2(-0.418751200f, -0.8636028000f),
    float2(-0.416079800f, -0.0844868000f),
    float2(-0.375173300f,  0.2196607000f),
    float2(-0.365659600f, -0.7324334000f),
    float2(-0.328659500f, -0.2012637000f),
    float2(-0.314739700f, -0.0006635741f),
    float2(-0.313584600f,  0.3636878000f),
    float2(-0.304295100f, -0.4983553000f),
    float2(-0.297423900f,  0.7496996000f),
    float2(-0.290303700f,  0.8890813000f),
    float2(-0.287866400f, -0.8622097000f),
    float2(-0.258897100f, -0.6538790000f),
    float2(-0.255569200f,  0.5041648000f),
    float2(-0.255329200f, -0.3389159000f),
    float2(-0.240136800f,  0.2306108000f),
    float2(-0.212445700f, -0.0993500100f),
    float2(-0.187790500f,  0.1098409000f),
    float2(-0.155987900f,  0.3356432000f),
    float2(-0.149944900f,  0.7487829000f),
    float2(-0.146661000f, -0.9256138000f),
    float2(-0.134277400f,  0.6185387000f),
    float2(-0.122452900f, -0.3887629000f),
    float2(-0.116467000f,  0.8827716000f),
    float2(-0.115759800f, -0.5399990000f),
    float2(-0.099831520f, -0.2407187000f),
    float2(-0.099537190f, -0.7834600000f),
    float2(-0.086042230f,  0.4591112000f),
    float2(-0.021281290f,  0.1551989000f),
    float2(-0.014788490f,  0.6969455000f),
    float2(-0.012317390f, -0.6752576000f),
    float2(-0.005001599f, -0.0040271640f),
    float2( 0.002484260f,  0.5679320000f),
    float2( 0.003355620f,  0.3472346000f),
    float2( 0.009554717f, -0.4025437000f),
    float2( 0.022317830f, -0.1349781000f),
    float2( 0.046942070f, -0.8347212000f),
    float2( 0.054126090f,  0.9042216000f),
    float2( 0.058128190f, -0.9826952000f),
    float2( 0.113132100f, -0.6193060000f),
    float2( 0.117073700f,  0.6799788000f),
    float2( 0.127510500f,  0.0532621800f),
    float2( 0.139340500f, -0.2149568000f),
    float2( 0.145787300f,  0.1991508000f),
    float2( 0.147420800f,  0.5443151000f),
    float2( 0.149711700f, -0.3899909000f),
    float2( 0.192377300f,  0.3683496000f),
    float2( 0.211092800f, -0.7888536000f),
    float2( 0.214823500f,  0.9586087000f),
    float2( 0.215221900f, -0.1084362000f),
    float2( 0.218920400f, -0.9644538000f),
    float2( 0.222002800f, -0.5058427000f),
    float2( 0.225169600f,  0.7794610000f),
    float2( 0.258572300f,  0.0162133900f),
    float2( 0.261284100f, -0.2832426000f),
    float2( 0.266548300f, -0.6422054000f),
    float2( 0.293987200f,  0.1673226000f),
    float2( 0.323574800f,  0.5643662000f),
    float2( 0.326923200f,  0.6984669000f),
    float2( 0.342543800f, -0.1783788000f),
    float2( 0.367250500f,  0.4398117000f),
    float2( 0.375571400f, -0.8814359000f),
    float2( 0.379463000f,  0.2842356000f),
    float2( 0.382297800f, -0.3812170000f),
    float2( 0.405784900f, -0.5227674000f),
    float2( 0.416873700f, -0.6936938000f),
    float2( 0.420274900f,  0.8369391000f),
    float2( 0.425218900f,  0.0381818200f),
    float2( 0.444590400f, -0.0936063600f),
    float2( 0.468428500f,  0.5885228000f),
    float2( 0.495218400f, -0.2319764000f),
    float2( 0.507235100f,  0.3683765000f),
    float2( 0.513619400f, -0.3944138000f),
    float2( 0.519893000f,  0.7157083000f),
    float2( 0.527784100f,  0.1486474000f),
    float2( 0.547494400f, -0.7618791000f),
    float2( 0.569273400f,  0.4852227000f),
    float2( 0.582229000f, -0.5125455000f),
    float2( 0.583022000f,  0.0085077850f),
    float2( 0.650025700f,  0.3473313000f),
    float2( 0.662130400f, -0.6280518000f),
    float2( 0.667421800f, -0.2260806000f),
    float2( 0.674187100f,  0.6734863000f),
    float2( 0.675345900f,  0.1119422000f),
    float2( 0.708309100f, -0.4393666000f),
    float2( 0.710696300f, -0.1020990000f),
    float2( 0.760675400f,  0.5743545000f),
    float2( 0.784670900f,  0.2282225000f),
    float2( 0.787144600f,  0.3891495000f),
    float2( 0.807178100f, -0.5257092000f),
    float2( 0.823068900f,  0.0026749220f),
    float2( 0.853197600f, -0.3256475000f),
    float2( 0.875829800f, -0.1824844000f),
    float2( 0.879769100f,  0.1284946000f),
    float2( 0.926309000f,  0.3576975000f),
    float2( 0.960891800f, -0.0349571700f),
    float2( 0.972032000f,  0.2271516000f)
};

#endif