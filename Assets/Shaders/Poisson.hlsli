#ifndef POISSON_HLSLI
#define POISSON_HLSLI

static const float2 PoissonDisk16[16] =
{
    float2(-0.897118f, -0.292844f),
    float2(-0.723126f,  0.604132f),
    float2(-0.629301f, -0.688084f),
    float2(-0.350243f,  0.479724f),
    float2(-0.263981f, -0.023720f),
    float2(-0.240700f, -0.564834f),
    float2(-0.192747f,  0.067404f),
    float2(-0.074722f,  0.775500f),
    float2(-0.007769f, -0.884470f),
    float2( 0.098180f,  0.301719f),
    float2( 0.155913f, -0.297205f),
    float2( 0.309058f,  0.754792f),
    float2( 0.490743f, -0.605370f),
    float2( 0.521056f,  0.091327f),
    float2( 0.702151f,  0.587526f),
    float2( 0.870042f, -0.136086f)
};

static const float2 PoissonDisk32[32] =
{
    float2(-0.938179f,  0.078641f),
    float2(-0.919052f, -0.331351f),
    float2(-0.826389f,  0.457728f),
    float2(-0.811540f, -0.609529f),
    float2(-0.775003f,  0.078126f),
    float2(-0.582976f, -0.305105f),
    float2(-0.558472f,  0.321642f),
    float2(-0.539529f, -0.673747f),
    float2(-0.487570f,  0.762807f),
    float2(-0.449922f,  0.486532f),
    float2(-0.403282f, -0.086280f),
    float2(-0.319364f, -0.480006f),
    float2(-0.301099f,  0.074272f),
    float2(-0.242345f, -0.873715f),
    float2(-0.216902f,  0.384992f),
    float2(-0.131939f,  0.730402f),
    float2(-0.078324f, -0.309159f),
    float2( 0.001527f,  0.115594f),
    float2( 0.087948f, -0.840850f),
    float2( 0.104055f,  0.612252f),
    float2( 0.189968f, -0.432313f),
    float2( 0.226510f,  0.327160f),
    float2( 0.269959f,  0.821771f),
    float2( 0.347203f, -0.705188f),
    float2( 0.385803f, -0.272238f),
    float2( 0.439462f,  0.090764f),
    float2( 0.586732f,  0.631846f),
    float2( 0.609540f, -0.102526f),
    float2( 0.712903f, -0.549027f),
    float2( 0.718313f,  0.203470f),
    float2( 0.813241f,  0.561731f),
    float2( 0.946649f, -0.177886f)
};

static const float2 PoissonDisk64[64] =
{
    float2(-0.976997f, -0.103886f),
    float2(-0.941912f,  0.298280f),
    float2(-0.911344f, -0.390946f),
    float2(-0.881787f,  0.107390f),
    float2(-0.805304f,  0.523916f),
    float2(-0.780220f, -0.184954f),
    float2(-0.780219f, -0.633095f),
    float2(-0.698923f,  0.293244f),
    float2(-0.654062f,  0.662932f),
    float2(-0.626659f, -0.447106f),
    float2(-0.564640f, -0.770177f),
    float2(-0.523733f,  0.425298f),
    float2(-0.503647f, -0.162546f),
    float2(-0.482466f,  0.799130f),
    float2(-0.470776f, -0.550218f),
    float2(-0.434740f,  0.163102f),
    float2(-0.356694f, -0.357138f),
    float2(-0.346648f,  0.610075f),
    float2(-0.326204f, -0.791509f),
    float2(-0.279866f,  0.370731f),
    float2(-0.274213f, -0.114775f),
    float2(-0.254725f,  0.866756f),
    float2(-0.225793f, -0.544390f),
    float2(-0.208047f,  0.029469f),
    float2(-0.170902f, -0.914844f),
    float2(-0.148693f,  0.504237f),
    float2(-0.098958f, -0.320766f),
    float2(-0.051164f,  0.236110f),
    float2(-0.051048f,  0.741873f),
    float2(-0.048266f, -0.682555f),
    float2( 0.033117f,  0.520680f),
    float2( 0.045469f, -0.189281f),
    float2( 0.083200f, -0.820667f),
    float2( 0.120913f,  0.104651f),
    float2( 0.161627f,  0.366136f),
    float2( 0.189780f, -0.430108f),
    float2( 0.238944f,  0.841481f),
    float2( 0.271508f, -0.737846f),
    float2( 0.295615f,  0.185694f),
    float2( 0.331807f, -0.276411f),
    float2( 0.366345f,  0.589351f),
    float2( 0.392596f, -0.606449f),
    float2( 0.409551f,  0.098927f),
    float2( 0.414831f,  0.835084f),
    float2( 0.442121f, -0.117928f),
    float2( 0.492383f,  0.439432f),
    float2( 0.511156f, -0.375846f),
    float2( 0.565872f,  0.257084f),
    float2( 0.567306f,  0.739508f),
    float2( 0.571382f, -0.688829f),
    float2( 0.624117f, -0.114628f),
    float2( 0.659693f, -0.415408f),
    float2( 0.688222f,  0.425118f),
    float2( 0.696648f,  0.079039f),
    float2( 0.707976f,  0.663535f),
    float2( 0.776246f, -0.220391f),
    float2( 0.788975f, -0.520596f),
    float2( 0.802198f,  0.259072f),
    float2( 0.816618f,  0.528354f),
    float2( 0.859955f, -0.425277f),
    float2( 0.921011f, -0.181967f),
    float2( 0.925629f,  0.116919f),
    float2( 0.935500f,  0.381248f),
    float2( 0.972509f,  0.002394f),
};

static const float2 PoissonDisk128[128] =
{
    float2(-0.986118f, -0.139829f),
    float2(-0.983594f,  0.278022f),
    float2(-0.959999f, -0.344082f),
    float2(-0.948464f,  0.463173f),
    float2(-0.936356f, -0.006715f),
    float2(-0.913350f,  0.112266f),
    float2(-0.895984f,  0.293910f),
    float2(-0.892374f, -0.554860f),
    float2(-0.869744f, -0.133072f),
    float2(-0.860364f,  0.640736f),
    float2(-0.844101f, -0.364238f),
    float2(-0.838235f,  0.006699f),
    float2(-0.811746f,  0.462978f),
    float2(-0.798936f,  0.204035f),
    float2(-0.774262f, -0.161858f),
    float2(-0.771420f, -0.454911f),
    float2(-0.759410f,  0.631036f),
    float2(-0.694173f, -0.103198f),
    float2(-0.690158f, -0.239989f),
    float2(-0.670869f,  0.407299f),
    float2(-0.663978f, -0.608955f),
    float2(-0.659486f,  0.156259f),
    float2(-0.632489f,  0.615057f),
    float2(-0.629493f, -0.391281f),
    float2(-0.610229f, -0.794358f),
    float2(-0.606653f,  0.495110f),
    float2(-0.602655f,  0.277317f),
    float2(-0.592434f, -0.245884f),
    float2(-0.589961f, -0.490668f),
    float2(-0.559272f,  0.109398f),
    float2(-0.541354f, -0.644769f),
    float2(-0.522160f,  0.387493f),
    float2(-0.515445f,  0.689305f),
    float2(-0.512189f, -0.198491f),
    float2(-0.506469f, -0.321881f),
    float2(-0.504132f, -0.769941f),
    float2(-0.489149f, -0.567284f),
    float2(-0.452345f,  0.044356f),
    float2(-0.450374f,  0.552125f),
    float2(-0.437912f,  0.250636f),
    float2(-0.428235f, -0.686077f),
    float2(-0.425355f,  0.773314f),
    float2(-0.414959f, -0.378129f),
    float2(-0.404923f, -0.001351f),
    float2(-0.376064f, -0.497575f),
    float2(-0.353026f,  0.466237f),
    float2(-0.336639f, -0.849316f),
    float2(-0.313850f,  0.302768f),
    float2(-0.307053f,  0.646820f),
    float2(-0.290252f, -0.441825f),
    float2(-0.286227f, -0.158265f),
    float2(-0.285223f,  0.124726f),
    float2(-0.269370f, -0.712393f),
    float2(-0.246142f,  0.455890f),
    float2(-0.228117f,  0.787579f),
    float2(-0.212489f, -0.343134f),
    float2(-0.208997f,  0.261836f),
    float2(-0.194169f, -0.067666f),
    float2(-0.181696f,  0.578559f),
    float2(-0.174232f, -0.625356f),
    float2(-0.132627f,  0.092361f),
    float2(-0.123849f, -0.227105f),
    float2(-0.118221f, -0.446901f),
    float2(-0.107725f,  0.717742f),
    float2(-0.093085f, -0.767243f),
    float2(-0.073667f,  0.431219f),
    float2(-0.047900f, -0.600294f),
    float2(-0.041707f,  0.008598f),
    float2(-0.037013f,  0.289603f),
    float2(-0.016809f,  0.829284f),
    float2(-0.011111f, -0.361694f),
    float2( 0.009147f,  0.549705f),
    float2( 0.013548f, -0.153280f),
    float2( 0.039997f, -0.801937f),
    float2( 0.066886f,  0.128303f),
    float2( 0.081224f,  0.343479f),
    float2( 0.083515f, -0.531689f),
    float2( 0.090610f, -0.273911f),
    float2( 0.120970f,  0.747767f),
    float2( 0.131568f,  0.489433f),
    float2( 0.151241f, -0.839239f),
    float2( 0.172158f,  0.195578f),
    float2( 0.187364f, -0.077339f),
    float2( 0.209816f,  0.365522f),
    float2( 0.225714f, -0.612887f),
    float2( 0.227019f,  0.654513f),
    float2( 0.237137f, -0.471531f),
    float2( 0.254749f,  0.846431f),
    float2( 0.283276f,  0.198166f),
    float2( 0.294074f, -0.128553f),
    float2( 0.313524f,  0.501889f),
    float2( 0.332773f, -0.675305f),
    float2( 0.337126f,  0.061990f),
    float2( 0.366923f, -0.561884f),
    float2( 0.389309f,  0.249705f),
    float2( 0.403169f, -0.289084f),
    float2( 0.410620f,  0.596191f),
    float2( 0.428272f, -0.786502f),
    float2( 0.431206f, -0.135220f),
    float2( 0.451544f,  0.447067f),
    float2( 0.468474f,  0.111391f),
    float2( 0.491970f, -0.417076f),
    float2( 0.510009f, -0.678595f),
    float2( 0.514692f,  0.360562f),
    float2( 0.516244f, -0.055182f),
    float2( 0.533383f,  0.765548f),
    float2( 0.572836f,  0.512794f),
    float2( 0.577641f, -0.295069f),
    float2( 0.584021f,  0.140704f),
    float2( 0.599295f, -0.568131f),
    float2( 0.608139f,  0.659147f),
    float2( 0.610649f, -0.102155f),
    float2( 0.622014f, -0.411576f),
    float2( 0.649089f,  0.264180f),
    float2( 0.669270f, -0.192698f),
    float2( 0.685367f, -0.642117f),
    float2( 0.689028f,  0.587011f),
    float2( 0.712343f,  0.080263f),
    float2( 0.732901f,  0.415433f),
    float2( 0.739284f, -0.462737f),
    float2( 0.751095f,  0.278290f),
    float2( 0.766726f, -0.275392f),
    float2( 0.783482f,  0.689923f),
    float2( 0.803046f, -0.337205f),
    float2( 0.803966f,  0.072743f),
    float2( 0.809335f,  0.503064f),
    float2( 0.826277f, -0.610692f),
    float2( 0.834196f,  0.335689f),
};

#endif